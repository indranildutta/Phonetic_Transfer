with(df_har, plotVowels(f1_v2_t5, f2_v2_t5,
xlim=xlim, ylim=ylim,
vowel = NULL, #group = speaker,
plot.tokens = F, plot.means = T,
var.col.by = v2, var.sty.by = v2, pch.means = v2,
ellipse.fill = T, ellipse.line = F,
poly.line = TRUE, poly.order = c("i", "e", "a", "ɔ", "o", "ʊ", "u"),
pretty = T))
with(df_har, plotVowels(f1_v1_t5, f2_v1_t5,
xlim=xlim, ylim=ylim,
vowel = NULL, #group = speaker,
plot.tokens = F, plot.means = T,
var.col.by = NULL, var.sty.by = NULL, pch.means = "V1",cex.means = 1.5,
ellipse.fill = T, fill.opacity = 0.3, col = "#FF6633", ellipse.line = F,
poly.line = T, poly.order = c("i", "e", "a", "ɔ", "o", "ʊ", "u"),
pretty = T))
par(new=TRUE)
with(df_har, plotVowels(f1_v2_t5, f2_v2_t5,
xlim=xlim, ylim=ylim,
vowel = NULL, #group = NULL,
plot.tokens = F, plot.means = T,
var.col.by = v2, var.sty.by = NULL, pch.means = "V2", cex.means = 1.5,
ellipse.fill = T, fill.opacity = 0.6, col = "grey", ellipse.line = F,
poly.line = T, poly.order = c("i", "e", "a", "ɔ", "o", "ʊ", "u"),
pretty = T))
with(df_har, plotVowels(f1_v1_t5, f2_v1_t5,
xlim=xlim, ylim=ylim,
vowel = NULL, #group = speaker,
plot.tokens = F, plot.means = T,
var.col.by = NULL, var.sty.by = NULL, pch.means = "V1",cex.means = 1.5,
ellipse.fill = T, fill.opacity = 0.3, col = "#FF6633", ellipse.line = F,
poly.line = T, poly.order = c("i", "e", "a", "ɔ", "o", "ʊ", "u"),
pretty = T))
par(new=TRUE)
with(df_har, plotVowels(f1_v2_t5, f2_v2_t5,
xlim=xlim, ylim=ylim,
vowel = NULL, #group = NULL,
plot.tokens = F, plot.means = T,
var.col.by = v2, var.sty.by = NULL, pch.means = "V2", cex.means = 1.5,
ellipse.fill = T, fill.opacity = 0.4, col = "grey", ellipse.line = F,
poly.line = T, poly.order = c("i", "e", "a", "ɔ", "o", "ʊ", "u"),
pretty = T))
with(df_har, plotVowels(f1_v1_t5, f2_v1_t5,
xlim=xlim, ylim=ylim,
vowel = NULL, #group = speaker,
plot.tokens = F, plot.means = T,
var.col.by = NULL, var.sty.by = NULL, pch.means = "V1",cex.means = 1.5,
ellipse.fill = T, fill.opacity = 0.3, col = "#FF6633", ellipse.line = F,
poly.line = T, poly.order = c("i", "e", "a", "ɔ", "o", "ʊ", "u"),
pretty = T))
par(new=TRUE)
with(df_har, plotVowels(f1_v2_t5, f2_v2_t5,
xlim=xlim, ylim=ylim,
vowel = NULL, #group = NULL,
plot.tokens = F, plot.means = T,
var.col.by = v2, var.sty.by = NULL, pch.means = "V2", cex.means = 1.5,
ellipse.fill = T, fill.opacity = 0.4, col = "grey", ellipse.line = F,
poly.line = T, poly.order = c("i", "e", "a", "ɔ", "o", "ʊ", "u"),
pretty = T))
df_lobanov.CS <- df_lobanov %>% mutate_if(is.numeric,scale)
df_har.CS <- df_har %>% mutate_if(is.numeric,scale)
df_nhar.CS <- df_nhar %>% mutate_if(is.numeric,scale)
# full model
ant_vh.model = lmer(f1_v1_t5 ~
v1+ v2 + consonant+
(0+f1_v2_t5|speaker) + (1|word),
data = df_lobanov.CS, REML = FALSE)
# full model
ant_vh.model = lmer(f1_v1_t5 ~
v1+ v2 + consonant+
(0+v2|speaker) + (1|word),
data = df_lobanov.CS, REML = FALSE)
# full model
ant_vh.model = lmer(f1_v1_t5 ~
v1+ v2 + consonant+
(1|word),
data = df_lobanov.CS, REML = FALSE)
summary(rePCA(ant_vh.model))
summary(ant_vh.model)
# full model
ant_vh.model = lmer(f1_v1_t5 ~
v1+ v2 + consonant+
(1|word),
data = df_lobanov.CS, REML = FALSE)
summary(ant_vh.model)
# full model
ant_vh.model = lmer(f1_v1_t5 ~
v1+ v2 +
(1|word),
data = df_lobanov.CS, REML = FALSE)
summary(ant_vh.model)
# null model
ant_null.model = lmer(f1_v1_t5 ~
v1 +
(1|word),
data = df_lobanov.CS, REML = FALSE)
summary(ant_null.model)
anova(ant_vh.model, ant_null.model)
# full model
car_vh.model = lmer(f1_v2_t5 ~
v2 + v1 +
(1|word),
data = df_lobanov.CS, REML = FALSE)
# null model
car_null.model = lmer(f1_v2_t5 ~
v2 +
(1|word),
data = df_lobanov.CS, REML = FALSE)
anova(car_vh.model, car_null.model)
# full model
ant_vh.model = lmer(f1_v1_t5 ~
v1+ v2 +
(1|word),
data = df_nhar.CS, REML = FALSE)
summary(ant_vh.model)
# full model
ant_vh.model = lmer(f1_v1_t5 ~
v1+ v2 +
(0+v2|word),
data = df_nhar.CS, REML = FALSE)
# full model
ant_vh.model = lmer(f1_v1_t5 ~
v1+ v2 +
(0+v2|speaker),
data = df_nhar.CS, REML = FALSE)
summary(ant_vh.model)
summary(rePCA(ant_vh.model))
# full model
ant_vh.model = lmer(f1_v1_t5 ~
v1+ v2 +
(1|speaker),
data = df_nhar.CS, REML = FALSE)
summary(rePCA(ant_vh.model))
# full model
ant_vh.model = lmer(f1_v1_t5 ~
v1+ v2 +
(1|speaker),
data = df_nhar.CS, REML = FALSE)
summary(ant_vh.model)
# null model
ant_null.model = lmer(f1_v1_t5 ~
v1 +
(1|speaker),
data = df_nhar.CS, REML = FALSE)
summary(ant_null.model)
# comparing full and null models
anova(ant_vh.model, ant_null.model)
# full model
car_vh.model = lmer(f1_v2_t5 ~
v2 + v1 +
(1|speaker),
data = df_nhar.CS, REML = FALSE)
summary(car_vh.model)
# null model
car_null.model = lmer(f1_v2_t5 ~
v2 +
(1|speaker),
data = df_nhar.CS, REML = FALSE)
anova(car_vh.model,car_null.model)
anova <- anova(ant_vh.model)
F <- anova$`F value`[[2]] %>% signif(digits=3)
df <- anova$`NumDF`[[2]] %>% signif(digits=3)
dendf <- anova$`DenDF`[[2]] %>% signif(digits=3)
# partial eta squared value for explanatory variable: F_to_eta2(Fvalue, NumDF, DenDF)
ant_effect <- F_to_eta2(F,df,dendf)$Eta2_partial %>% signif(digits=3)
rm(anova,F,df,dendf)
# Carryover model: estimating effect size (partial eta squared) for the main variable (F1 of v1) from F-value
anova <- anova(car_vh.model)
F <- anova$`F value`[[2]] %>% signif(digits=3)
df <- anova$`NumDF`[[2]] %>% signif(digits=3)
dendf <- anova$`DenDF`[[2]] %>% signif(digits=3)
# partial eta squared value for explanatory variable: F_to_eta2(Fvalue, NumDF, DenDF)
car_effect <- F_to_eta2(F,df,dendf)$Eta2_partial %>% signif(digits=3)
rm(anova,F,df,dendf)
# compare effect sizes
ant_greater <- ant_effect > car_effect
if(ant_greater == TRUE) {
print("Anticipatory effect greater than carryover.")
} else {
print("Carryover effect is greater than anticipatory.")
}
# full model
car_vh.model = lmer(f1_v2_t5 ~
v2 + v1 +
(1|speaker),
data = df_nhar.CS, REML = FALSE)
summary(car_vh.model)
# full model
car_vh.model = lmer(f1_v2_t5 ~
v2 + v1 +
(1+v1|speaker),
data = df_nhar.CS, REML = FALSE)
summary(car_vh.model)
# full model
car_vh.model = lmer(f1_v2_t5 ~
v2 + v1 +
(1|speaker),
data = df_nhar.CS, REML = FALSE)
# full model
car_vh.model = lmer(f1_v2_t5 ~
v2 + v1 +
(0+v1|speaker),
data = df_nhar.CS, REML = FALSE)
summary(car_vh.model)
# full model
car_vh.model = lmer(f1_v2_t5 ~
v2 + v1 +
(1|speaker),
data = df_nhar.CS, REML = FALSE)
# interaction model for anticipatory coarticulation
ant_vh.model = lmer(f1_v1_t5 ~
v1 + harmony_type*v2 +
(0+f1_v2_t5|speaker) + (1|word),
data = df_harmonytype.CS, REML = FALSE)
# coding harmony type as a binary variable (harmonic vs non-harmonic) and removing empty levels
df_harmonytype.CS <- df_lobanov.CS %>%
mutate(harmony_type = str_replace_all(harmony_type, "ATR|rounding", "harmonic")) %>%
mutate_if(is.character,as.factor)
df_har.CS <- df_har.CS %>%
mutate(harmony_type = str_replace_all(harmony_type, "ATR|rounding", "harmonic")) %>%
mutate_if(is.character,as.factor)
df_nhar.CS$harmony_type <- droplevels(df_nhar.CS$harmony_type)
# interaction model for anticipatory coarticulation
ant_vh.model = lmer(f1_v1_t5 ~
v1 + harmony_type*v2 +
(0+f1_v2_t5|speaker) + (1|word),
data = df_harmonytype.CS, REML = FALSE)
summary(ant_vh.model)
# interaction model for anticipatory coarticulation
ant_vh.model = lmer(f1_v1_t5 ~
v1 + harmony_type*v2 +
(0+v2|speaker) + (1|word),
data = df_harmonytype.CS, REML = FALSE)
# interaction model for anticipatory coarticulation
ant_vh.model = lmer(f1_v1_t5 ~
v1 + harmony_type*v2 +
(1|speaker) + (1|word),
data = df_harmonytype.CS, REML = FALSE)
summary(ant_vh.model)
# interaction model for anticipatory coarticulation
ant_vh.model = lmer(f1_v1_t5 ~
v1 + harmony_type*v2 +
(1|speaker),
data = df_harmonytype.CS, REML = FALSE)
summary(ant_vh.model)
with(df_har, plotVowels(f1_v1_t5, f2_v1_t5,
xlim=xlim, ylim=ylim,
vowel = NULL, #group = speaker,
plot.tokens = F, plot.means = T,
var.col.by = NULL, var.sty.by = NULL, pch.means = "V1",cex.means = 1.5,
ellipse.fill = T, fill.opacity = 0.25, col = "#FF6633", ellipse.line = F,
poly.line = T, poly.order = c("i", "e", "a", "ɔ", "o", "ʊ", "u"),
pretty = T))
par(new=TRUE)
with(df_har, plotVowels(f1_v2_t5, f2_v2_t5,
xlim=xlim, ylim=ylim,
vowel = NULL, #group = NULL,
plot.tokens = F, plot.means = T,
var.col.by = v2, var.sty.by = NULL, pch.means = "V2", cex.means = 1.5,
ellipse.fill = T, fill.opacity = 0.4, col = "grey", ellipse.line = F,
poly.line = T, poly.order = c("i", "e", "a", "ɔ", "o", "ʊ", "u"),
pretty = T))
with(df_har, plotVowels(f1_v1_t5, f2_v1_t5,
xlim=xlim, ylim=ylim,
vowel = NULL, #group = speaker,
plot.tokens = F, plot.means = T,
var.col.by = NULL, var.sty.by = NULL, pch.means = "V1",cex.means = 1.5,
ellipse.fill = T, fill.opacity = 0.25, col = "#FF6633", ellipse.line = F,
poly.line = T, poly.order = c("i", "e", "a", "ɔ", "o", "ʊ", "u"),
pretty = T))
par(new=TRUE)
with(df_har, plotVowels(f1_v2_t5, f2_v2_t5,
xlim=xlim, ylim=ylim,
vowel = NULL, #group = NULL,
plot.tokens = F, plot.means = T,
var.col.by = v2, var.sty.by = NULL, pch.means = "V2", cex.means = 1.5,
ellipse.fill = T, fill.opacity = 0.4, col = "grey", ellipse.line = F,
poly.line = T, poly.order = c("i", "e", "a", "ɔ", "o", "ʊ", "u"),
pretty = T))
###########################
library(phonR)
library(ggplot2)
with(df_har, plotVowels(f1_v1_t5, f2_v1_t5,
xlim=xlim, ylim=ylim,
vowel = NULL, #group = speaker,
plot.tokens = F, plot.means = T,
var.col.by = NULL, var.sty.by = NULL, pch.means = "V1",cex.means = 1.5,
ellipse.fill = T, fill.opacity = 0.25, col = "#FF6633", ellipse.line = F,
poly.line = T, poly.order = c("i", "e", "a", "ɔ", "o", "ʊ", "u"),
pretty = T))
par(new=TRUE)
with(df_har, plotVowels(f1_v2_t5, f2_v2_t5,
xlim=xlim, ylim=ylim,
vowel = NULL, #group = NULL,
plot.tokens = F, plot.means = T,
var.col.by = v2, var.sty.by = NULL, pch.means = "V2", cex.means = 1.5,
ellipse.fill = T, fill.opacity = 0.4, col = "grey", ellipse.line = F,
poly.line = T, poly.order = c("i", "e", "a", "ɔ", "o", "ʊ", "u"),
pretty = T))
# full model
ant_vh.model = lmer(f1_v1_t5 ~
v1+ v2 +
(1|word),
data = df_lobanov.CS, REML = FALSE)
summary(ant_vh.model)
# null model
ant_null.model = lmer(f1_v1_t5 ~
v1 +
(1|word),
data = df_lobanov.CS, REML = FALSE)
summary(ant_null.model)
anova(ant_vh.model, ant_null.model)
# full model
car_vh.model = lmer(f1_v2_t5 ~
v2 + v1 +
(1|word),
data = df_lobanov.CS, REML = FALSE)
summary(car_vh.model)
# null model
car_null.model = lmer(f1_v2_t5 ~
v2 +
(1|word),
data = df_lobanov.CS, REML = FALSE)
anova(car_vh.model, car_null.model)
# coding harmony type as a binary variable (harmonic vs non-harmonic) and removing empty levels
df_harmonytype.CS <- df_lobanov.CS %>%
mutate(harmony_type = str_replace_all(harmony_type, "ATR|rounding", "harmonic")) %>%
mutate_if(is.character,as.factor)
df_har.CS <- df_har.CS %>%
mutate(harmony_type = str_replace_all(harmony_type, "ATR|rounding", "harmonic")) %>%
mutate_if(is.character,as.factor)
df_nhar.CS$harmony_type <- droplevels(df_nhar.CS$harmony_type)
# interaction model for anticipatory coarticulation
ant_vh.model = lmer(f1_v1_t5 ~
v1 + harmony_type*v2 +
(1|speaker),
data = df_harmonytype.CS, REML = FALSE)
# interaction model for anticipatory coarticulation
ant_vh.model = lmer(f1_v1_t5 ~
v1 + harmony_type*v2 +
(1|word),
data = df_harmonytype.CS, REML = FALSE)
summary(ant_vh.model)
# null (non-interaction) model
ant_null.model = lmer(f1_v1_t5 ~
v1 + v2 +
(1|word),
data = df_harmonytype.CS, REML = FALSE)
summary(ant_null.model)
anova(ant_vh.model, ant_null.model)
# null (non-interaction) model
ant_null.model = lmer(f1_v1_t5 ~
v1 + v2 + harmony_type +
(1|word),
data = df_harmonytype.CS, REML = FALSE)
summary(ant_null.model)
# null (non-interaction) model
ant_null.model = lmer(f1_v1_t5 ~
v1 + v2 +
(1|word),
data = df_harmonytype.CS, REML = FALSE)
summary(ant_null.model)
anova(ant_vh.model, ant_null.model)
# interaction model for carryover coarticulation
car_vh.model = lmer(f1_v2_t5 ~
v2 + harmony_type*v1 +
(1|word),
data = df_harmonytype.CS, REML = FALSE)
summary(car_vh.model)
# null (non-interaction) model
car_null.model = lmer(f1_v2_t5 ~
v2 + f1_v1_t5 + consonant +
(0+f1_v1_t5|speaker) + (1|word),
data = df_harmonytype.CS, REML = FALSE)
# null (non-interaction) model
car_null.model = lmer(f1_v2_t5 ~
v2 + v1 +
(1|word),
data = df_harmonytype.CS, REML = FALSE)
summary(car_null.model)
anova(car_vh.model, car_null.model)
# null (non-interaction) model
car_null.model = lmer(f1_v2_t5 ~
v2 + v1 + harmony_type +
(1|word),
data = df_harmonytype.CS, REML = FALSE)
summary(car_null.model)
anova(car_vh.model, car_null.model)
# interaction model for carryover coarticulation
car_vh.model = lmer(f1_v2_t5 ~
v2 + harmony_type*v1 +
(1|word),
data = df_harmonytype.CS, REML = FALSE)
# null (non-interaction) model
car_null.model = lmer(f1_v2_t5 ~
v2 + v1 +
(1|word),
data = df_harmonytype.CS, REML = FALSE)
anova(car_vh.model, car_null.model)
# full model
ant_vh.model = lmer(f1_v1_t5 ~
v1+ v2 +
(1|speaker),
data = df_nhar.CS, REML = FALSE)
summary(ant_vh.model)
# null model
ant_null.model = lmer(f1_v1_t5 ~
v1 +
(1|speaker),
data = df_nhar.CS, REML = FALSE)
summary(ant_null.model)
# comparing full and null models
anova(ant_vh.model, ant_null.model)
# full model
car_vh.model = lmer(f1_v2_t5 ~
v2 + v1 +
(1|speaker),
data = df_nhar.CS, REML = FALSE)
# null model
car_null.model = lmer(f1_v2_t5 ~
v2 +
(1|speaker),
data = df_nhar.CS, REML = FALSE)
anova(car_vh.model,car_null.model)
anova <- anova(ant_vh.model)
F <- anova$`F value`[[2]] %>% signif(digits=3)
df <- anova$`NumDF`[[2]] %>% signif(digits=3)
dendf <- anova$`DenDF`[[2]] %>% signif(digits=3)
# partial eta squared value for explanatory variable: F_to_eta2(Fvalue, NumDF, DenDF)
ant_effect <- F_to_eta2(F,df,dendf)$Eta2_partial %>% signif(digits=3)
rm(anova,F,df,dendf)
# Carryover model: estimating effect size (partial eta squared) for the main variable (F1 of v1) from F-value
anova <- anova(car_vh.model)
F <- anova$`F value`[[2]] %>% signif(digits=3)
df <- anova$`NumDF`[[2]] %>% signif(digits=3)
dendf <- anova$`DenDF`[[2]] %>% signif(digits=3)
# partial eta squared value for explanatory variable: F_to_eta2(Fvalue, NumDF, DenDF)
car_effect <- F_to_eta2(F,df,dendf)$Eta2_partial %>% signif(digits=3)
rm(anova,F,df,dendf)
# compare effect sizes
ant_greater <- ant_effect > car_effect
if(ant_greater == TRUE) {
print("Anticipatory effect greater than carryover.")
} else {
print("Carryover effect is greater than anticipatory.")
}
# full model
ant_vh.model = lmer(f1_v1_t5 ~
v1+ v2 +
(1|speaker) + (1|word),
data = df_har.CS, REML = FALSE)
# full model
ant_vh.model = lmer(f1_v1_t5 ~
v1+ v2 +
(1|speaker),
data = df_har.CS, REML = FALSE)
# full model
ant_vh.model = lmer(f1_v1_t5 ~
v1+ v2 +
(1|word),
data = df_har.CS, REML = FALSE)
summary(ant_vh.model)
# null model
ant_null.model = lmer(f1_v1_t5 ~
v1 +
(1|word),
data = df_har.CS, REML = FALSE)
anova(ant_vh.model, ant_null.model)
car_vh.model = lmer(f1_v2_t5 ~
v2 + v1 +
(1|word),
data = df_har.CS, REML = FALSE)
car_null.model = lmer(f1_v2_t5 ~
v2 +
(1|word),
data = df_har.CS, REML = FALSE)
anova(car_vh.model, car_null.model)
anova <- anova(ant_vh.model)
F <- anova$`F value`[[2]] %>% signif(digits=3)
df <- anova$`NumDF`[[2]] %>% signif(digits=3)
dendf <- anova$`DenDF`[[2]] %>% signif(digits=3)
# partial eta squared value for explanatory variable: F_to_eta2(Fvalue, NumDF, DenDF)
ant_effect <- F_to_eta2(F,df,dendf)$Eta2_partial %>% signif(digits=3)
rm(anova,F,df,dendf)
# Carryover model: estimating effect size (partial eta squared) for the main variable (F1 of v1) from F-value
anova <- anova(car_vh.model)
F <- anova$`F value`[[2]] %>% signif(digits=3)
df <- anova$`NumDF`[[2]] %>% signif(digits=3)
dendf <- anova$`DenDF`[[2]] %>% signif(digits=3)
# partial eta squared value for explanatory variable: F_to_eta2(Fvalue, NumDF, DenDF)
car_effect <- F_to_eta2(F,df,dendf)$Eta2_partial %>% signif(digits=3)
rm(anova,F,df,dendf)
# compare effect sizes
ant_greater <- ant_effect > car_effect
if(ant_greater == TRUE) {
print("Anticipatory effect greater than carryover.")
} else {
print("Carryover effect is greater than anticipatory.")
}
# full model
ant_vh.model = lmer(f1_v1_t5 ~
v1+ v2 + f1_v2_t5 +
(1|word),
data = df_har.CS, REML = FALSE)
summary(ant_vh.model)
# null model
ant_null.model = lmer(f1_v1_t5 ~
v1 + v2 +
(1|word),
data = df_har.CS, REML = FALSE)
summary(ant_null.model)
anova(ant_vh.model, ant_null.model)
