names_to = c(".value", "time"),
names_sep = "_",
names_transform = list(time = as.factor)
)
gender_normalized <- with(df_lobanov_time, normLobanov(cbind(f1,f2), group=gender))
df_lobanov_gender_time <- df_lobanov_time %>%
select(!c(f1,f2)) %>%
mutate(f1 = gender_normalized$f1,
f2 = gender_normalized$f2)
View(df_lobanov_gender_time)
temp <- df_lobanov_gender_time %>%
mutate(time = as.numeric(time)) %>%
mutate(time = scale(time))
View(temp)
?scale
?rescale
install.packages("arm")
library(tidyverse)
library(phonR)
library(stargazer)
library(lme4)
library(lmerTest)
library(pwr)
library(simr)
# replacing vowel symbols with unicode:
remapping_english <- c(`\\ae` = "æ", `\\vt` = "ʌ")
# replacing vowel symbols with unicode:
remapping_english <- c(`\\ae` = "æ", `\\vt` = "ʌ")
# read in data
df <- read.csv("RCode/formant_data_5.csv", check.names = TRUE) %>%
rename_all(tolower) %>%
mutate(vowel = remapping_english[as.character(vowel)]) %>%
mutate_if(is.character,as.factor)
attach(df)
normF1 <- with(df,normLobanov(cbind(f1_5,f1_15,f1_25,f1_35,f1_45)),group=subject)
normF2 <- with(df,normLobanov(cbind(f2_5,f2_15,f2_25,f2_35,f2_45)),group=subject)
df_lobanov <- data.frame(subject,gender,task,word,context,vowel,normF1,normF2)
detach(df)
rm(normF1,normF2)
# lobanov-normalized FFs
df_lobanov_time <- df_lobanov %>%
rename(f1_1=f1_5, f1_2=f1_15, f1_3=f1_25, f1_4=f1_35, f1_5=f1_45, f2_1=f2_5, f2_2=f2_15, f2_3=f2_25, f2_4=f2_35, f2_5=f2_45) %>%
# dplyr pivot() functions: convert data between long(indexed) and wide(cartesian) formats
pivot_longer(starts_with("f"),
names_to = c(".value", "time"),
names_sep = "_",
names_transform = list(time = as.factor)
)
# raw FFs
df_time <- df %>%
select(!c("filename", "f1_mid", "vowel_duration")) %>%
rename(f1_1=f1_5, f1_2=f1_15, f1_3=f1_25, f1_4=f1_35, f1_5=f1_45, f2_1=f2_5, f2_2=f2_15, f2_3=f2_25, f2_4=f2_35, f2_5=f2_45) %>%
# dplyr pivot() functions: convert data between long(indexed) and wide(cartesian) formats
pivot_longer(starts_with("f"),
names_to = c(".value", "time"),
names_sep = "_",
names_transform = list(time = as.factor)
)
gender_normalized <- with(df_lobanov_time, normLobanov(cbind(f1,f2), group=gender))
df_lobanov_gender_time <- df_lobanov_time %>%
select(!c(f1,f2)) %>%
mutate(f1 = gender_normalized$f1,
f2 = gender_normalized$f2)
temp <- df_lobanov_gender_time %>%
mutate(time = as.numeric(time)) %>%
mutate(time = scale(time))
# full model
phon_acco.model = lmer(f2 ~
vowel*time + vowel*context*task +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
library(tidyverse)
library(phonR)
library(stargazer)
library(lme4)
library(lmerTest)
library(pwr)
library(simr)
# full model
phon_acco.model = lmer(f2 ~
vowel*time + vowel*context*task +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
# null model
null.model = lmer(f2~
time*vowel + vowel*context + task*context +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
anova(phon_acco.model, null.model)
# null model
null.model = lmer(f2~
time*vowel + vowel*context + task*vowel +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
summary(null.model)
anova(phon_acco.model, null.model)
# full model
phon_acco.model = lmer(f2 ~
vowel*time + vowel*context*task + task*time +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
summary(phon_acco.model)
# null model
null.model = lmer(f2~
time*vowel + vowel*context*task +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
anova(phon_acco.model, null.model)
# full model
phon_acco.model = lmer(f2 ~
vowel*time + vowel*context*task + task*time + vowel*context*time +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
summary(phon_acco.model)
# null model
null.model = lmer(f2~
time*vowel + vowel*context*task + task*time +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
anova(phon_acco.model, null.model)
summary(phon_acco.model)
# null model
null.model = lmer(f2~
time*vowel + vowel*context*task*time +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
summary(null.model)
anova(phon_acco.model, null.model)
stargazer(phon_acco.model)
summary(phon_acco.model)
packages.uninstall
detach
detach
detach(package:stargazer)
detach(package:lmerTest)
library(stargazer)
stargazer(phon_acco.model)
View(null.model)
knitr::opts_chunk$set(echo = TRUE, warning = TRUE, message = TRUE)
library(tidyverse)
library(stargazer)
library(lme4)
library(phonR)
# replacing vowel symbols with unicode:
remapping_english <- c(`\\ae` = "æ", `\\vt` = "ʌ")
# read in data
df <- read.csv("RCode/formant_data_5.csv", check.names = TRUE) %>%
rename_all(tolower) %>%
mutate(vowel = remapping_english[as.character(vowel)]) %>%
mutate_if(is.character,as.factor)
attach(df)
normF1 <- with(df,normLobanov(cbind(f1_5,f1_15,f1_25,f1_35,f1_45)),group=subject)
normF2 <- with(df,normLobanov(cbind(f2_5,f2_15,f2_25,f2_35,f2_45)),group=subject)
df_lobanov <- data.frame(subject,gender,task,word,context,vowel,normF1,normF2)
detach(df)
rm(normF1,normF2)
# lobanov-normalized FFs
df_lobanov_time <- df_lobanov %>%
rename(f1_1=f1_5, f1_2=f1_15, f1_3=f1_25, f1_4=f1_35, f1_5=f1_45, f2_1=f2_5, f2_2=f2_15, f2_3=f2_25, f2_4=f2_35, f2_5=f2_45) %>%
# dplyr pivot() functions: convert data between long(indexed) and wide(cartesian) formats
pivot_longer(starts_with("f"),
names_to = c(".value", "time"),
names_sep = "_",
names_transform = list(time = as.factor)
)
# raw FFs
df_time <- df %>%
select(!c("filename", "f1_mid", "vowel_duration")) %>%
rename(f1_1=f1_5, f1_2=f1_15, f1_3=f1_25, f1_4=f1_35, f1_5=f1_45, f2_1=f2_5, f2_2=f2_15, f2_3=f2_25, f2_4=f2_35, f2_5=f2_45) %>%
# dplyr pivot() functions: convert data between long(indexed) and wide(cartesian) formats
pivot_longer(starts_with("f"),
names_to = c(".value", "time"),
names_sep = "_",
names_transform = list(time = as.factor)
)
gender_normalized <- with(df_lobanov_time, normLobanov(cbind(f1,f2), group=gender))
df_lobanov_gender_time <- df_lobanov_time %>%
select(!c(f1,f2)) %>%
mutate(f1 = gender_normalized$f1,
f2 = gender_normalized$f2)
rm(gender_normalized)
temp <- df_lobanov_gender_time %>%
mutate(time = as.numeric(time)) %>%
mutate(time = scale(time))
# full model
phon_acco.model = lmer(f1 ~
time*vowel + vowel*context*task + time*task + vowel*context*time +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
# full model
phon_acco.model = lmer(f1 ~
time*vowel + vowel*context*task + time*task +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
summary(phon_acco.model)
stargazer(phon_acco.model)
install.packages("modelsummary")
install.packages("systemfonts")
install.packages("modelsummary")
install.packages("modelsummary")
knitr::opts_chunk$set(echo = TRUE, warning = TRUE, message = TRUE)
library(modelsummary)
modelsummary(phon_acco.model)
library(lmerTest)
# full model
phon_acco.model = lmer(f1 ~
time*vowel + vowel*context*task + time*task +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
modelsummary(phon_acco.model)
summary(phon_acco.model)
# full model
phon_acco.model = lmer(f2 ~
vowel*time + vowel*context*task + task*time +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
# full model
phon_acco.model = lmer(f2 ~
vowel*time + vowel*context*task + task*time +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
summary(phon_acco.model)
options(scipen=999)
summary(phon_acco.model)
knitr::opts_chunk$set(echo = TRUE, warning = TRUE, message = TRUE)
options(scipen=999) # turn off scientific e notation, show full numbers. To turn on: options(scipen=0)
# full model
phon_acco.model = lmer(f1 ~
time*vowel + vowel*context*task + time*task +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
summary(phon_acco.model)
# full model
phon_acco.model = lmer(f1 ~
time*vowel + vowel*context*task + time*task +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
summary(phon_acco.model)
# full model
phon_acco.model = lmer(f2 ~
vowel*time + vowel*context*task + task*time +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
summary(phon_acco.model)
# Cohen's d values:
lme.dscore(phon_acco.model, data='temp', type='lme4')
install.packages("EMAtools")
# Cohen's d values (from EMAtools package):
lme.dscore(phon_acco.model, data='temp', type='lme4')
library(EMAtools)
# Cohen's d values (from EMAtools package):
lme.dscore(phon_acco.model, data='temp', type='lme4')
# Cohen's d values (from EMAtools package):
lme.dscore(phon_acco.model, data=temp, type='lme4')
# Cohen's d values (from EMAtools package):
d_F2 <- lme.dscore(phon_acco.model, data=temp, type='lme4')
View(d_F2)
# full model
phon_acco.model = lmer(f2 ~
vowel*time + vowel*context*task + task*time +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
# Cohen's d values (from EMAtools package):
d_F2 <- lme.dscore(phon_acco.model, data=temp, type='lme4')
# Cohen's d values (from EMAtools package):
d_F2 <- lme.dscore(phon_acco.model, data=temp, type='lme4')
# full model
phon_acco.model = lmer(f1 ~
time*vowel + vowel*context*task + time*task +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
# Cohen's d values (from EMAtools package):
d_F1 <- lme.dscore(phon_acco.model, data=temp, type='lme4')
View(d_F1)
summary(phon_acco.model)
# full model
phon_acco.model_f1 = lmer(f1 ~
time*vowel + vowel*context*task + time*task +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
# full model
phon_acco.model_f2 = lmer(f2 ~
vowel*time + vowel*context*task + task*time +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
fixef(phon_acco.model_f1)
temp.model <- fixef(phon_acco.model_f1)["contexte:tasks"] <- - 0.1
fixef(phon_acco.model_f1)["contexte:tasks"] <- - 0.1
library(simr)
fixef(phon_acco.model_f1)["contexte:tasks"] <- - 0.1
powerSim(phon_acco.model_f1, test = fixed("contexte:tasks"), nsim = 20)
fixef(phon_acco.model_f1)
fixef(phon_acco.model_f1)["vowelʌ:contexte"] <- - 0.1
fixef(phon_acco.model_f1)
# full model
phon_acco.model_f1 = lmer(f1 ~
time*vowel + vowel*context*task + time*task +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
fixef(phon_acco.model_f1)
fixef(phon_acco.model_f1)["vowelʌ:contexte"] <- - 0.1
fixef(phon_acco.model_f1)
powerSim(phon_acco.model_f1, test = fixed("vowelʌ:contexte"), nsim = 20)
# full model
phon_acco.model_f1 = lmer(f1 ~
time*vowel + vowel*context*task + time*task +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
powerSim(phon_acco.model_f1, test = fixed("vowelʌ:contexte"), nsim = 20)
fixef(phon_acco.model_f1)
fixef(phon_acco.model_f1)["vowelʌ:contexte:tasks"] <- - 0.1
# power for interaction term: compare current model to one without the interaction term
powerSim(phon_acco.model_f1, nsim = 20, test = fcompare(f1 ~ time*vowel + time*task))
package(simr)
citation(simr)
citation("simr")
citation("EMAtools")
fixef(phon_acco.model_f1)["vowelʌ:contexte:tasks"] <- - 0.05
# power for interaction term: compare current model to one without the interaction term
powerSim(phon_acco.model_f1, nsim = 20, test = fcompare(f1 ~ time*vowel + time*task))
fixef(phon_acco.model_f1)
pc <- powerCurve (trial, along = "subject", test = fixed("vowelʌ:contexte:tasks"), nsim = 20)
pc <- powerCurve (phon_acco.model_f1, along = "subject", test = fixed("vowelʌ:contexte:tasks"), nsim = 20)
# power for interaction term: compare current model to one without the interaction term
powerSim(phon_acco.model_f1, nsim = 20, test = fcompare(f1 ~ time*vowel + vowel*context + time*task))
fixef(phon_acco.model_f1)["vowelʌ:contexte:tasks"] <- - 0.1
# power for interaction term: compare current model to one without the interaction term
powerSim(phon_acco.model_f1, nsim = 20, test = fcompare(f1 ~ time*vowel + vowel*context + time*task))
fixef(phon_acco.model_f1)
fixef(phon_acco.model_f1)
install.packages("mixedpower")
if (!require("devtools")) {
install.packages("devtools", dependencies = TRUE)}
devtools::install_github("DejanDraschkow/mixedpower")
devtools::install_github("DejanDraschkow/mixedpower")
knitr::opts_chunk$set(echo = TRUE, warning = TRUE, message = TRUE)
options(scipen=999) # turn off scientific e notation, show full numbers. To turn on: options(scipen=0)
devtools::install_github("DejanDraschkow/mixedpower")
library(rlang)
detach("package:rlang", unload = TRUE)
library(rlang)
sessioninfo()
sessionInfo()
knitr::opts_chunk$set(echo = TRUE, warning = TRUE, message = TRUE)
options(scipen=999) # turn off scientific e notation, show full numbers. To turn on: options(scipen=0)
devtools::install_github("DejanDraschkow/mixedpower")
library(mixedpower)
View(df_lobanov)
temp <- df_lobanov %>%
filter(df_lobanov, vowel=="ʌ")
library(tidyverse)
library(phonR)
library(stargazer)
library(modelsummary)
library(lme4)
temp <- df_lobanov %>%
filter(df_lobanov, vowel=="ʌ")
temp <- df_lobanov %>%
filter(df_lobanov, vowel=ʌ)
temp <- df_lobanov %>%
filter(df_lobanov, vowel == ʌ)
temp <- df_lobanov %>%
filter(vowel == ʌ)
temp <- df_lobanov %>%
filter(vowel == "ʌ")
View(temp)
temp <- df_lobanov %>%
filter(vowel == "æ")
1196+1137
knitr::opts_chunk$set(echo = TRUE, warning = TRUE, message = TRUE)
options(scipen=999) # turn off scientific e notation, show full numbers. To turn on: options(scipen=0)
power_trial <- mixedpower(model = phon_acco.model_f1, data = temp,
fixed_effects = c("vowel","time","context","task"),
simvar = "subject_num", steps = c(5,10,15,20),
critical_value = 2)
# dummy numeric variable for subject:
remapping_subjects <- c("f1"="01", "f2"="02", "f3"="03", "f4"="04", "f5"="05", "m1"="06", "m2"="07", "m3"="08", "m4"="09", "m5"="10")
temp <- temp %>%
mutate(subject_num = remapping_subjects[as.character(subject)] %>%
as.numeric(subject_num))
temp <- temp %>%
mutate(subject_num = remapping_subjects[as.character(subject)]) %>%
mutate(subject_num = as.numeric(subject_num))
power_trial <- mixedpower(model = phon_acco.model_f1, data = temp,
fixed_effects = c("vowel","time","context","task"),
simvar = "subject_num", steps = c(5,10,15,20),
critical_value = 2)
fixef(temp)
fixef(phon_acco.model_f1)
power_trial <- mixedpower(model = phon_acco.model_f1, data = temp,
fixed_effects = c("vowel","time","context","task"),
simvar = "subject_num", steps = c(5,10,15,20),
critical_value = 2)
power_trial <- mixedpower(model = phon_acco.model_f1, data = temp,
fixed_effects = c("vowel","context","time","task"),
simvar = "subject_num", steps = c(5,10,15,20),
critical_value = 2)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE, warning = TRUE, message = TRUE)
options(scipen=999) # turn off scientific e notation, show full numbers. To turn on: options(scipen=0)
library(phonR)
library(modelsummary)
library(lme4)
detach(modelsummary)
detach("modelsummary")
detach(lme4)
detach(package:modelsummary)
library(mixedpower)
# replacing vowel symbols with unicode:
remapping_english <- c(`\\ae` = "æ", `\\vt` = "ʌ")
# read in data
df <- read.csv("RCode/formant_data_5.csv", check.names = TRUE) %>%
rename_all(tolower) %>%
mutate(vowel = remapping_english[as.character(vowel)]) %>%
mutate_if(is.character,as.factor)
attach(df)
normF1 <- with(df,normLobanov(cbind(f1_5,f1_15,f1_25,f1_35,f1_45)),group=subject)
normF2 <- with(df,normLobanov(cbind(f2_5,f2_15,f2_25,f2_35,f2_45)),group=subject)
df_lobanov <- data.frame(subject,gender,task,word,context,vowel,normF1,normF2)
detach(df)
rm(normF1,normF2)
# lobanov-normalized FFs
df_lobanov_time <- df_lobanov %>%
rename(f1_1=f1_5, f1_2=f1_15, f1_3=f1_25, f1_4=f1_35, f1_5=f1_45, f2_1=f2_5, f2_2=f2_15, f2_3=f2_25, f2_4=f2_35, f2_5=f2_45) %>%
# dplyr pivot() functions: convert data between long(indexed) and wide(cartesian) formats
pivot_longer(starts_with("f"),
names_to = c(".value", "time"),
names_sep = "_",
names_transform = list(time = as.factor)
)
gender_normalized <- with(df_lobanov_time, normLobanov(cbind(f1,f2), group=gender))
df_lobanov_gender_time <- df_lobanov_time %>%
select(!c(f1,f2)) %>%
mutate(f1 = gender_normalized$f1,
f2 = gender_normalized$f2)
rm(gender_normalized)
View(df_lobanov_gender_time)
temp <- df_lobanov_gender_time %>%
mutate(time = as.numeric(time)) %>%
mutate(time = scale(time))
# full model
phon_acco.model_f1 = lmer(f1 ~
time*vowel + vowel*context*task + time*task +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
summary(phon_acco.model)
summary(phon_acco.model_f1)
# dummy numeric variable for subject:
remapping_subjects <- c("f1"="01", "f2"="02", "f3"="03", "f4"="04", "f5"="05", "m1"="06", "m2"="07", "m3"="08", "m4"="09", "m5"="10")
temp <- temp %>%
mutate(subject_num = remapping_subjects[as.character(subject)]) %>%
mutate(subject_num = as.numeric(subject_num))
power_trial <- mixedpower(model = phon_acco.model_f1, data = temp,
fixed_effects = c("vowel","context","time","task"),
simvar = "subject_num", steps = c(5,10,15,20),
critical_value = 2)
View(power_trial)
plot(power_trial)
multiplotPower(power_trial)
power_plot <- multiplotPower(power_trial)
power_plot
power_trial
?multiplotPower
knitr::opts_chunk$set(echo = TRUE, warning = TRUE, message = TRUE)
options(scipen=999) # turn off scientific e notation, show full numbers. To turn on: options(scipen=0)
# full model
phon_acco.model_f2 = lmer(f2 ~
vowel*time + vowel*context*task + task*time +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
library(tidyverse)
library(phonR)
library(lme4)
library(mixedpower)
# full model
phon_acco.model_f1 = lmer(f1 ~
time*vowel + vowel*context*task + time*task +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
# full model
phon_acco.model_f2 = lmer(f2 ~
vowel*time + vowel*context*task + task*time +
(1+context|word) + (1+context+vowel|subject),
data= temp, REML=FALSE, control = lmerControl(optimizer = "bobyqa"))
View(temp)
beta.f1 <-fixef(phon_acco.model_f1) #creates a named vector. To remove names, function: unname(beta.f1)
# setting beta-values to 85% of original
beta.f1 %>%
map(~ . * 0.85) # map each element of the vector to the result of applying the function f to it
power_f1_sesoi <- mixedpower(model = phon_acco.model_f1, data = temp,
fixed_effects = c("vowel","context","time","task"),
simvar = "subject_num", steps = c(5,8,10,12,15,20), n_sim = 500,
SESOI = beta.f1, databased = F,
critical_value = 2)
powerplot_f1_sesoi <- multiplotPower(power_f1_sesoi, filename = "powerplot_f1_sesoi.png")
beta.f2 <-fixef(phon_acco.model_f2) #creates a named vector. To remove names, function: unname(beta.f1)
beta.f2
# setting beta-values to 85% of original
beta.f2 %>%
map(~ . * 0.85) # map each element of the vector to the result of applying the function f to it
power_f2_sesoi <- mixedpower(model = phon_acco.model_f2, data = temp,
fixed_effects = c("vowel","context","time","task"),
simvar = "subject_num", steps = c(5,10,15,20), n_sim = 500,
SESOI = beta.f2, databased = F,
critical_value = 2)
power_f2_sesoi <- mixedpower(model = phon_acco.model_f2, data = temp,
fixed_effects = c("vowel","context","time","task"),
simvar = "subject_num", steps = c(5,7,10,12,15,20), n_sim = 500,
SESOI = beta.f2, databased = F,
critical_value = 2)
powerplot_f2_sesoi <- multiplotPower(power_f2_sesoi, filename = "powerplot_f2_sesoi.png")
View(phon_acco.model_f1)
